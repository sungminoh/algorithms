
#! /usr/bin/env python
# -*- coding: utf-8 -*-
# vim:fenc=utf-8
#
# Copyright © 2020 sungminoh <smoh2044@gmail.com>
#
# Distributed under terms of the MIT license.

"""
You are given the number of rows n_rows and number of columns n_cols of a 2D binary matrix where all values are initially 0. Write a function flip which chooses a 0 value uniformly at random, changes it to 1, and then returns the position [row.id, col.id] of that value. Also, write a function reset which sets all values back to 0. Try to minimize the number of calls to system's Math.random() and optimize the time and space complexity.

Note:

	1
	0  and 0
	flip will not be called when the matrix has no 0 values left.
	the total number of calls to flip and reset will not exceed 1000.

Example 1:

Input:
["Solution","flip","flip","flip","flip"]
[[2,3],[],[],[],[]]
Output: [
,[0,1],[1,2],[1,0],[1,1]]

Example 2:

Input:
["Solution","flip","flip","reset","flip"]
[[1,2],[],[],[],[]]
Output: [
,[0,0],[0,1],
,[0,0]]

Explanation of Input Syntax:

The input is two lists: the subroutines called and their arguments. Solution's constructor has two arguments, n_rows and n_cols. flip and reset have no arguments. Arguments are always wrapped with a list, even if there aren't any.
"""
import sys
import random
from typing import List
import pytest


class Solution:
    def __init__(self, n_rows: int, n_cols: int):
        self.n_rows = n_rows
        self.n_cols = n_cols
        self.reset()

    def flip(self) -> List[int]:
        i = random.randint(0, self.end)
        new_i = self.zeros.get(i, i)
        if i < self.end:
            self.zeros[i] = self.zeros.get(self.end, self.end)
        self.end -= 1
        return divmod(new_i, self.n_cols)

    def reset(self) -> None:
        self.zeros = {}
        self.end = self.n_rows * self.n_cols - 1


@pytest.mark.parametrize('commands, args', [
    (["flip","flip","flip","flip"], [2,3]),
    (["flip","flip","reset","flip"], [1,2]),
    (["flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "flip", "reset"], [1000,750]),
    (["reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip", "reset", "flip", "flip", "flip", "flip"], [10000,10000])
])
def test(commands, args):
    print()
    s = Solution(*args)
    samples = []
    points = set()
    for command in commands:
        point = getattr(s, command)()
        if point is None:
            samples.append(points)
            points = set()
        else:
            assert point not in points
            points.add(point)
    for sample in samples:
        print(sample)

if __name__ == '__main__':
    sys.exit(pytest.main(["-s", "-v"] + sys.argv))
